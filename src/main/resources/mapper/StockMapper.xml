<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sanxiangbank.seckill.dao.StockMapper">
    <resultMap id="BaseResultMap" type="com.sanxiangbank.seckill.entity.Stock">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
        <result column="sale" property="sale" jdbcType="INTEGER"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="beginTime" property="beginTime" jdbcType="TIMESTAMP"/>
        <result column="endTime" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="rate" property="rate" jdbcType="DOUBLE"/>
        <result column="years" property="years" jdbcType="INTEGER"/>
        <result column="amount" property="amount" jdbcType="INTEGER"/>
        <result column="detail" property="detail" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="queryAliveStockList" resultType="com.sanxiangbank.seckill.entity.Stock">
        select *
        from stock
        where endTime > CURRENT_TIMESTAMP;
    </select>
    <select id="selectAll" resultType="com.sanxiangbank.seckill.entity.Stock">
        select *
        from stock;
    </select>

<!--    <select id="queryStockByPageIndex" parameterType="java.lang.Integer"-->
<!--            resultMap="com.sanxiangbank.seckill.entity.Stock">-->
<!--        select *-->
<!--        from Stock limit #{currIndex} , #{pageSize};-->
<!--    </select>-->
<!--    <select id="queryStockCount" resultType="java.lang.Integer" parameterType="java.lang.Integer">-->
<!--        select count(*)-->
<!--        from stock;-->
<!--    </select>-->
    <sql id="Base_Column_List">
        id
        , name, count, sale, version
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from stock
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from stock
        where id = #{id,jdbcType=INTEGER}
        FOR UPDATE
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from stock
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.sanxiangbank.seckill.entity.Stock">
        insert into stock (name, count, sale, version, rate, years, amount, detail, beginTime, endTime)
        values (#{name,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{sale,jdbcType=INTEGER},
                #{version,jdbcType=INTEGER},
                #{rate,jdbcType=DOUBLE}, #{years,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER},
                #{detail,jdbcType=VARCHAR},
                #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.sanxiangbank.seckill.entity.Stock">
        insert into stock
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="count != null">
                count,
            </if>
            <if test="sale != null">
                sale,
            </if>
            <if test="version != null">
                version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
            <if test="sale != null">
                #{sale,jdbcType=INTEGER},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sanxiangbank.seckill.entity.Stock">
        update stock
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="count != null">
                count = #{count,jdbcType=INTEGER},
            </if>
            <if test="sale != null">
                sale = #{sale,jdbcType=INTEGER},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sanxiangbank.seckill.entity.Stock">
        update stock
        set name    = #{name,jdbcType=VARCHAR},
            count   = #{count,jdbcType=INTEGER},
            sale    = #{sale,jdbcType=INTEGER},
            version = #{version,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByOptimistic" parameterType="com.sanxiangbank.seckill.entity.Stock">
        update stock
        <set>
            sale = sale + 1,
        </set>
        WHERE id = #{id,jdbcType=INTEGER}
        AND sale = #{sale,jdbcType=INTEGER}
    </update>
</mapper>